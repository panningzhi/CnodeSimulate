{"version":3,"sources":["components/Header/Index.module.scss","components/Topics/Index.module.scss","views/Home/Index.module.scss","views/Profile/Index.module.scss","components/ProfilePanel/Index.module.scss","components/OtherTopic/Index.module.scss","components/RecentReply/Index.module.scss","views/Topic/Index.module.scss","components/Reply/Index.module.scss","assets/image/cnodejs.svg","assets/image/thumbs-up.svg","components/Header/Index.js","utils/request.js","utils/tab.js","components/Topics/Index.js","views/Home/Index.js","utils/api.js","utils/eventProxy.js","components/ProfilePanel/Index.js","components/OtherTopic/Index.js","components/RecentReply/Index.js","views/Profile/Index.js","components/Reply/Index.js","views/Topic/Index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","search-btn","topic","count","title","time","home","user","panel","inside-divider","avatar","divider","content","left","info","right","reply","thumbs","__webpack_require__","p","Header","state","visible","handleOk","_this","setState","showModal","search","document","getElementById","value","window","open","react_default","a","createElement","styleName","href","src","require","alt","onSubmit","this","className","autoFocus","id","type","autoComplete","placeholder","onClick","modal","onOk","onCancel","target","rel","icon","theme","twoToneColor","Component","CSSModules","style","error","message","service","axios","create","baseURL","timeout","interceptors","request","use","config","err","Promise","reject","response","data","tab","good","name","color","job","ask","share","Topics","props","list","length","skeleton","active","items","map","item","author","loginname","key","Link","to","avatar_url","reply_count","visit_count","tag","moment","last_reply_at","startOf","fromNow","TabPane","Tabs","Home","Object","classCallCheck","_super","call","scrollMethod","sumH","body","scrollHeight","documentElement","clientHeight","scrollTop","getTopics","tabChanged","store","limit","page","addEventListener","removeEventListener","_this2","url","method","params","then","res","spin","spinning","tabs","defaultActiveKey","onChange","Topics_Index","eventProxy","onObj","oneObj","on","fn","undefined","push","one","off","trigger","args","arguments","concat","Array","prototype","slice","i","apply","ProfilePanel","fetchData","nextProps","getUserByName","score","githubUsername","create_at","OtherTopic","isUnmounted","_this3","recent_topics","temp","simple","defaultProps","RecentReply","recent_replies","Profile","match","ProfilePanel_Index","OtherTopic_Index","RecentReply_Index","html","__html","reply_id","upvote","index","getThumbs","ups","dangerouslySetInnerHTML","getHTML","unshift","Topic","getTopicById","objectSpread","Reply_Index","replies","App","Index","HashRouter","Route","exact","path","component","render","Redirect","Boolean","location","hostname","locale","ReactDOM","locale_provider","zhCN","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f64bff8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Index_header__jXLfW\",\"search-btn\":\"Index_search-btn__B3uOQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topic\":\"Index_topic__1yFFp\",\"count\":\"Index_count__1DLAb\",\"title\":\"Index_title__1H1QQ\",\"time\":\"Index_time__2yjhV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Index_home__H4k2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Index_user__2nUvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Index_panel__1zHwC\",\"user\":\"Index_user__1XS49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Index_panel__37BTq\",\"time\":\"Index_time__32fdF\",\"inside-divider\":\"Index_inside-divider__26Rmn\",\"avatar\":\"Index_avatar__2fLvg\",\"divider\":\"Index_divider__34L1f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Index_panel__2gf4L\",\"time\":\"Index_time__2Es8Q\",\"inside-divider\":\"Index_inside-divider__2wcUT\",\"avatar\":\"Index_avatar__1IPHN\",\"divider\":\"Index_divider__1ZmNM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topic\":\"Index_topic__1BmJS\",\"title\":\"Index_title__RRiSJ\",\"content\":\"Index_content__fjcfY\",\"left\":\"Index_left__1GIhR\",\"info\":\"Index_info__1rYTy\",\"right\":\"Index_right__h7FfM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reply\":\"Index_reply__3A5P_\",\"info\":\"Index_info__1eic4\",\"thumbs\":\"Index_thumbs__1TVy4\"};","module.exports = __webpack_public_path__ + \"static/media/cnodejs.e2b40b75.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbs-up.b296ff53.svg\";","import React, { Component } from 'react'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport { Modal, Icon } from 'antd'\r\n\r\n/**\r\n * 网站的顶部Header组件\r\n */\r\nclass Header extends Component {\r\n  /**\r\n   * 给state设置默认值\r\n   * P.S. 另外一种设置方法见ProfilePanel/Index.js文件\r\n   */\r\n  state = { visible: false }\r\n\r\n\r\n  /**\r\n   * 隐藏Modal(模态)框\r\n   */\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false\r\n    })\r\n  }\r\n  /**\r\n   * 显示Modal(模态)框\r\n   */\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    })\r\n  }\r\n    search = () =>{\r\n    if (document.getElementById(\"search_input\").value != \"\") {\r\n      window.open (\"https://www.baidu.com/s?wd=\" + \"site:cnodejs.org \" +document.getElementById(\"search_input\").value);\r\n      document.getElementById(\"search_input\").value = \"\";\r\n    }\r\n    return false;\r\n  }//搜索跳转百度\r\n\r\n\r\n  /*login = () =>{\r\n    this.accessMatch();\r\n\r\n  }\r\n  accessMatch(){\r\n    accessMatch({\r\n      accesstoken: \"c76c4bd5-773e-43a2-88cb-5767bf3d3b6c\"\r\n    })\r\n  }\r\n*/\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div styleName=\"header\">\r\n        <div>\r\n          <a href=\"/\">\r\n            <img\r\n              src={require('@src/assets/image/cnodejs.svg')}\r\n              alt=\"网站logo\"\r\n            />\r\n          </a>\r\n          <a >\r\n          <form onSubmit={this.search} className=\"search-box\">\r\n            <input autoFocus id=\"search_input\" className=\"search-txt\" type=\"text\" autoComplete=\"off\"\r\n                   placeholder=\"Type to search\"  />\r\n          </form>\r\n          </a>\r\n          <a>\r\n            <span className=\"search-btn\" onClick={this.search} >\r\n              搜索\r\n            </span>\r\n          </a>\r\n\r\n\r\n          <span onClick={this.showModal} className=\"about\">关于</span>\r\n\r\n        </div>\r\n        <Modal\r\n          title=\"关于本项目\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleOk}\r\n        >\r\n          {/* P.S. 当使用_blank时有一个容易忽略的安全漏洞，需要注意：https://developers.google.com/web/tools/lighthouse/audits/noopener?hl=zh-cn */}\r\n          <p>\r\n            作者：\r\n            <a\r\n              href=\"https://github.com/panningzhi\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow noopener noreferrer\"\r\n            >\r\n              盘凝知\r\n            </a>\r\n            <a> / </a>\r\n            <a\r\n                href=\"https://github.com/lingwu-hb\"\r\n                target=\"_blank\"\r\n                rel=\"nofollow noopener noreferrer\">\r\n              韩博\r\n            </a>\r\n            <a> / </a>\r\n            <a\r\n                href=\"https://github.com/ChenZhe0\"\r\n                target=\"_blank\"\r\n                rel=\"nofollow noopener noreferrer\">\r\n              陈哲\r\n            </a>\r\n          </p>\r\n          <p>\r\n            源码：\r\n            <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n            <a\r\n              href=\"https://github.com/lingwu-hb/CnodeSimulate\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow noopener noreferrer\"\r\n            >\r\n              CnodeSimulate\r\n            </a>\r\n            <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n            &nbsp;欢迎Star~&nbsp;\r\n            <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n          </p>\r\n          <div>\r\n            <p>技术栈：</p>\r\n            <ul>\r\n              <li>React</li>\r\n              <li>React Router</li>\r\n              <li>Ant Design</li>\r\n              <li>Axios</li>\r\n              <li>CnodeJS API</li>\r\n            </ul>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(Header, style)\r\n","import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\n/**\r\n * 封装axios，实现发送/响应接口的拦截，来实现统一提示等效果\r\n */\r\n\r\nconst error = () => {\r\n  message.error('数据加载失败！', 1)\r\n}\r\n\r\nconst service = axios.create({\r\n  baseURL: 'https://cnodejs.org/api/v1',\r\n  timeout: 5000 // 请求超时时间限制\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    return config\r\n  },\r\n  err => {\r\n    error()\r\n    Promise.reject(err)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    return response.data\r\n  },\r\n  err => {\r\n    error()\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default service\r\n","/**\r\n * 帖子的tab字典，因为有好几个地方都要用到，所以单独提取出来\r\n */\r\nexport default {\r\n  good: {\r\n    name: '精华',\r\n    color: 'magenta'\r\n  },\r\n  job: {\r\n    name: '招聘',\r\n    color: 'blue'\r\n  },\r\n  ask: {\r\n    name: '问答',\r\n    color: 'geekblue'\r\n  },\r\n  share: {\r\n    name: '分享',\r\n    color: 'green'\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Tag } from 'antd'\r\nimport moment from 'moment'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport tab from '@src/utils/tab'\r\nimport { Skeleton } from 'antd'\r\n\r\n/**\r\n * 首页帖子列表组件\r\n */\r\nclass Topics extends Component {\r\n  render() {\r\n    // 在没有数据时，展示骨架图\r\n    if (this.props.list.length === 0) {\r\n      return <Skeleton active />\r\n    }\r\n\r\n    const items = this.props.list.map(item => {\r\n        if(!item.author.loginname){\r\n           return null\r\n        }\r\n      return (\r\n        <div styleName=\"topic\" key={item.id}>\r\n          <Link to={'/user/' + item.author.loginname}>\r\n            <img src={item.author.avatar_url} alt=\"用户头像\" />\r\n          </Link>\r\n          <span styleName=\"count\">\r\n            <em>{item.reply_count}</em>/<em>{item.visit_count}</em>\r\n          </span>\r\n          <Tag color={tab[item.tab] && tab[item.tab].color}>\r\n            {tab[item.tab] && tab[item.tab].name}\r\n          </Tag>\r\n          <Link styleName=\"title\" to={'/topic/' + item.id}>\r\n            {item.title}\r\n          </Link>\r\n          <span styleName=\"time\">\r\n            {moment(item.last_reply_at, 'YYYY-MM-DD')\r\n              .startOf('day')\r\n              .fromNow()}\r\n          </span>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return <div>{items}</div>\r\n  }\r\n}\r\n\r\nexport default CSSModules(Topics, style)\r\n","import React, { Component } from 'react'\r\nimport { getTopics } from '@src/utils/api'\r\nimport Topics from '@src/components/Topics/Index'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport { Tabs, Spin } from 'antd'\r\n\r\nconst TabPane = Tabs.TabPane\r\n\r\n/**\r\n * 网站首页\r\n */\r\nclass Home extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      page: 1,\r\n      limit: 20,\r\n      list: [],\r\n      store: {}, // 存储所有Tab对应的数据，因为切换Tab后就没必要重新以limit:20加载数据。\r\n      tab: 'all' // 当前Tab，声明在全局变量里是为了滚动时相关函数也可以获取的到\r\n    }\r\n  }\r\n  /**\r\n   * 1. 调用接口获取数据\r\n   * 2. 绑定窗口滚动监听函数\r\n   * P.S. 一般在此钩子下面调用接口或者类似操作\r\n   */\r\n  componentDidMount() {\r\n    this.getTopics()\r\n    window.addEventListener('scroll', this.scrollMethod)\r\n  }\r\n  /**\r\n   * 组件被销毁时，记得移除绑定的滚动事件\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.scrollMethod)\r\n  }\r\n  /**\r\n   * 封装好的获取首页数据的函数，这样就不需要每次使用都copy一遍代码了\r\n   */\r\n  getTopics() {\r\n    const state = this.state\r\n    getTopics({\r\n      page: state.page,\r\n      limit: state.limit,\r\n      tab: state.tab\r\n    }).then(res => {\r\n      const store = state.store\r\n\r\n      this.setState({\r\n        list: res.data,\r\n        limit: this.state.limit + 10\r\n      })\r\n      // 将数据存储到对应的key下\r\n      store[state.tab] = {\r\n        limit: state.limit,\r\n        data: res.data\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * 滚动函数，判断当前滚动条是否到了底部来决定是否重新拉取数据\r\n   */\r\n  scrollMethod = () => {\r\n    const sumH =\r\n      document.body.scrollHeight || document.documentElement.scrollHeight\r\n    const viewH = document.documentElement.clientHeight\r\n    const scrollH =\r\n      document.body.scrollTop || document.documentElement.scrollTop\r\n    if (viewH + scrollH + 50 >= sumH) {\r\n      this.getTopics()\r\n    }\r\n  }\r\n  /**\r\n   * 当前Tab变化时判断Store里是否已经存储数据。\r\n   * 是：拉出来，设置到state中\r\n   * 否：重新获取数据\r\n   * 这里使用箭头函数而不是上面的那种方式，是为了解决this问题\r\n   * 详情看：https://react.docschina.org/docs/react-without-es6.html#%E8%87%AA%E5%8A%A8%E7%BB%91%E5%AE%9A\r\n   * （或者自行Google）\r\n   */\r\n  tabChanged = tab => {\r\n    const store = this.state.store\r\n\r\n    // 如果未存储当前Tab的数据，重新获取\r\n    if (!store[tab]) {\r\n      this.setState(\r\n        {\r\n          tab,\r\n          limit: 20,\r\n          list: []\r\n        },\r\n        () => {\r\n          this.getTopics()\r\n        }\r\n      )\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      tab,\r\n      limit: store[tab].limit,\r\n      list: store[tab].data\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div styleName=\"home\">\r\n        <Spin spinning={false}>\r\n          <div>\r\n            <Tabs defaultActiveKey=\"\" onChange={this.tabChanged}>\r\n              <TabPane tab=\"全部\" key=\"all\">\r\n                <Topics list={this.state.list} />\r\n              </TabPane>\r\n              <TabPane tab=\"精华\" key=\"good\">\r\n                <Topics list={this.state.list} />\r\n              </TabPane>\r\n              <TabPane tab=\"分享\" key=\"share\">\r\n                <Topics list={this.state.list} />\r\n              </TabPane>\r\n              <TabPane tab=\"问答\" key=\"ask\">\r\n                <Topics list={this.state.list} />\r\n              </TabPane>\r\n              <TabPane tab=\"工作\" key=\"job\">\r\n                <Topics list={this.state.list} />\r\n              </TabPane>\r\n            </Tabs>\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(Home, style)\r\n","import request from '@src/utils/request'\r\n\r\n// 获取首页帖子列表数据\r\nexport const getTopics = data => {\r\n  return request({\r\n    url: '/topics',\r\n    method: 'get',\r\n    params: data\r\n  })\r\n}\r\n\r\n// 获取帖子详情数据\r\nexport const getTopicById = id => {\r\n  return request({\r\n    url: `/topic/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取用户详情数据\r\nexport const getUserByName = loginname => {\r\n  return request({\r\n    url: `/user/${loginname}`,\r\n    method: 'get'\r\n  })\r\n}\r\n//验证accessToken\r\nexport const accessMatch = accesstoken =>{\r\n  return request({\r\n    url:`/accesstoken`,\r\n    method: 'post',\r\n  })\r\n}\r\n\r\n//为评论点赞\r\nexport const upvoteComments = reply_id =>{\r\n  return request(\r\n      {\r\n        url:`/reply/${reply_id}/ups`,\r\n        method: 'post'\r\n      }\r\n  )\r\n}","/**\r\n * 一个发布-订阅模式的实现\r\n * 用来解决两个任意组件间的数据传递（一般是非父子组件，因为父子组件用props更好）\r\n **/\r\nconst eventProxy = {\r\n  onObj: {},\r\n  oneObj: {},\r\n  on: function(key, fn) {\r\n    if (this.onObj[key] === undefined) {\r\n      this.onObj[key] = []\r\n    }\r\n\r\n    this.onObj[key].push(fn)\r\n  },\r\n  one: function(key, fn) {\r\n    if (this.oneObj[key] === undefined) {\r\n      this.oneObj[key] = []\r\n    }\r\n\r\n    this.oneObj[key].push(fn)\r\n  },\r\n  off: function(key) {\r\n    this.onObj[key] = []\r\n    this.oneObj[key] = []\r\n  },\r\n  trigger: function() {\r\n    let key, args\r\n    if (arguments.length === 0) {\r\n      return false\r\n    }\r\n    key = arguments[0]\r\n    args = [].concat(Array.prototype.slice.call(arguments, 1))\r\n\r\n    if (this.onObj[key] !== undefined && this.onObj[key].length > 0) {\r\n      for (let i in this.onObj[key]) {\r\n        this.onObj[key][i].apply(null, args)\r\n      }\r\n    }\r\n    if (this.oneObj[key] !== undefined && this.oneObj[key].length > 0) {\r\n      for (let i in this.oneObj[key]) {\r\n        this.oneObj[key][i].apply(null, args)\r\n        this.oneObj[key][i] = undefined\r\n      }\r\n      this.oneObj[key] = []\r\n    }\r\n  }\r\n}\r\n\r\nexport default eventProxy\r\n","import React, { Component } from 'react'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport { getUserByName } from '@src/utils/api'\r\nimport { Link } from 'react-router-dom'\r\nimport eventProxy from '@src/utils/eventProxy'\r\nimport moment from 'moment'\r\nimport { Skeleton } from 'antd'\r\n\r\n/**\r\n * 帖子页面右侧最上方的个人信息展示组件\r\n */\r\nclass ProfilePanel extends Component {\r\n  /**\r\n   * state有两种初始化方法，这是其中一种\r\n   * 另外一种见：header/index.js文件\r\n   */\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      user: {}\r\n    }\r\n  }\r\n  /**\r\n   * 调用接口获取数据\r\n   * P.S. 一般在此钩子下面调用接口或者类似操作\r\n   */\r\n  componentDidMount() {\r\n    this.fetchData(this.props.loginname)\r\n  }\r\n  /**\r\n   * 在当前路由状态变化后触发的钩子函数\r\n   * P.S. 这个函数一般用来解决，路由发生了变化，但组件因为没有被销毁所以不会再一次触发‘componentDidMount’钩子，\r\n   * 这时候就可以在当前钩子下重新获取数据\r\n   * @param {Object} nextProps props对象\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    this.fetchData(nextProps.loginname)\r\n  }\r\n  /**\r\n   * 封装好的获取数据的函数，这样就不需要每次使用都copy一遍代码了\r\n   */\r\n  fetchData(loginname) {\r\n    getUserByName(loginname).then(res => {\r\n      this.setState({\r\n        user: res.data\r\n      })\r\n      eventProxy.trigger('user', res.data)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    // 在没有数据时，展示骨架图\r\n    if (!this.state.user.loginname) {\r\n      return <Skeleton active />\r\n    }\r\n    return (\r\n      <div styleName=\"panel\">\r\n        <Link styleName=\"user\" to={'/user/' + this.state.user.loginname}>\r\n          <img src={this.state.user.avatar_url} alt=\"用户头像\" />\r\n          <span>{this.state.user.loginname}</span>\r\n        </Link>\r\n        <div>积分：{this.state.user.score}</div>\r\n        <div>\r\n          Github：\r\n          <a\r\n            href={'https://github.com/' + this.state.user.githubUsername}\r\n            target=\"_blank\"\r\n            rel=\"nofollow noopener noreferrer\"\r\n          >\r\n            {this.state.user.githubUsername}\r\n          </a>\r\n        </div>\r\n        <div>\r\n          注册时间：\r\n          {moment(this.state.user.create_at, 'YYYY-MM-DD')\r\n            .startOf('day')\r\n            .fromNow()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(ProfilePanel, style)\r\n","import React, { Component } from 'react'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport { Link } from 'react-router-dom'\r\nimport eventProxy from '@src/utils/eventProxy'\r\nimport { Divider } from 'antd'\r\nimport moment from 'moment'\r\n\r\n/**\r\n * 帖子页面右侧最中间的的发贴者的其他帖子组件\r\n */\r\nclass OtherTopic extends Component {\r\n  /**\r\n   * 设置props的默认值\r\n   */\r\n  static defaultProps = {\r\n    simple: true // 是否展示简单模式？\r\n  }\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      user: {}\r\n    }\r\n  }\r\n  /**\r\n   * 监听'user'，将被传入的数据设置到当前组件state中\r\n   * P.S. 一般在此钩子下面调用接口或者类似操作\r\n   */\r\n  componentDidMount() {\r\n    // 增加属性，表示当前实例未被卸载\r\n    this.isUnmounted = false\r\n    eventProxy.on('user', data => {\r\n      // 如果当前实例被卸载了，就没有必要更新其state了（会引起内存泄漏）\r\n      if (!this.isUnmounted) {\r\n        this.setState({\r\n          user: data\r\n        })\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * 给this增加属性，表示当前实例已被卸载\r\n   */\r\n  componentWillUnmount() {\r\n    this.isUnmounted = true\r\n  }\r\n\r\n  render() {\r\n    // 增加空值判断\r\n    if (!this.state.user.recent_topics) {\r\n      return <div />\r\n    }\r\n\r\n    const items = this.state.user.recent_topics.map(item => {\r\n      let temp = <Link to={'/topic/' + item.id}>{item.title}</Link>\r\n      // 如果不展示简单模式的话，就需要将用户头像等信息展示出来\r\n      if (!this.props.simple) {\r\n        temp = (\r\n          <div>\r\n            <Link styleName=\"avatar\" to={'/user/' + item.author.loginname}>\r\n              <img src={item.author && item.author.avatar_url} alt=\"头像\" />\r\n            </Link>\r\n            <Link key={item.id} to={'/topic/' + item.id}>\r\n              {item.title}\r\n            </Link>\r\n            <span styleName=\"time\">\r\n              {moment(item.last_reply_at, 'YYYY-MM-DD')\r\n                .startOf('day')\r\n                .fromNow()}\r\n            </span>\r\n            <Divider styleName=\"inside-divider\" />\r\n          </div>\r\n        )\r\n      }\r\n      return <div key={item.id}>{temp}</div>\r\n    })\r\n    return (\r\n      <div styleName=\"panel\">\r\n        <header>最近创建的话题</header>\r\n        <Divider styleName=\"divider\" />\r\n        {items}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(OtherTopic, style)\r\n","import React, { Component } from 'react'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport { Link } from 'react-router-dom'\r\nimport eventProxy from '@src/utils/eventProxy'\r\nimport { Divider } from 'antd'\r\nimport moment from 'moment'\r\n\r\nclass RecentReply extends Component {\r\n  /**\r\n   * 设置props的默认值\r\n   */\r\n  static defaultProps = {\r\n    simple: true // 是否展示简单模式？\r\n  }\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      user: {}\r\n    }\r\n  }\r\n  /**\r\n   * 监听'user'，将被传入的数据设置到当前组件state中\r\n   * P.S. 一般在此钩子下面调用接口或者类似操作\r\n   */\r\n  componentDidMount() {\r\n    // 增加属性，表示当前实例未被卸载\r\n    this.isUnmounted = false\r\n    eventProxy.on('user', data => {\r\n      // 如果当前实例被卸载了，就没有必要更新其state了（会引起内存泄漏）\r\n      if (!this.isUnmounted) {\r\n        this.setState({\r\n          user: data\r\n        })\r\n      }\r\n    })\r\n  }\r\n  /**\r\n   * 给this增加属性，表示当前实例已被卸载\r\n   */\r\n  componentWillUnmount() {\r\n    this.isUnmounted = true\r\n  }\r\n\r\n  render() {\r\n    // 增加空值判断\r\n    if (!this.state.user.recent_replies) {\r\n      return <div />\r\n    }\r\n\r\n    const items = this.state.user.recent_replies.map(item => {\r\n      let temp = (\r\n        <Link key={item.id} to={'/topic/' + item.id}>\r\n          {item.title}\r\n        </Link>\r\n      )\r\n      // 如果不展示简单模式的话，就需要将用户头像等信息展示出来\r\n      if (!this.props.simple) {\r\n        temp = (\r\n          <div>\r\n            <Link styleName=\"avatar\" to={'/user/' + item.author.loginname}>\r\n              <img src={item.author && item.author.avatar_url} alt=\"头像\" />\r\n            </Link>\r\n            <Link key={item.id} to={'/topic/' + item.id}>\r\n              {item.title}\r\n            </Link>\r\n            <span styleName=\"time\">\r\n              {moment(item.last_reply_at, 'YYYY-MM-DD')\r\n                .startOf('day')\r\n                .fromNow()}\r\n            </span>\r\n            <Divider styleName=\"inside-divider\" />\r\n          </div>\r\n        )\r\n      }\r\n      return <div key={item.id}>{temp}</div>\r\n    })\r\n    return (\r\n      <div styleName=\"panel\">\r\n        <header>最近参与的话题</header>\r\n        <Divider styleName=\"divider\" />\r\n        {items}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(RecentReply, style)\r\n","import React, { Component } from 'react'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport ProfilePanel from '@src/components/ProfilePanel/Index'\r\nimport OtherTopic from '@src/components/OtherTopic/Index'\r\nimport RecentReply from '@src/components/RecentReply/Index'\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      loginname: ''\r\n    }\r\n  }\r\n  /**\r\n   * 1. 调用接口获取数据\r\n   * 2. 绑定窗口滚动监听函数\r\n   */\r\n  componentWillMount() {\r\n    this.setState({\r\n      loginname: this.props.match.params.id\r\n    })\r\n  }\r\n  /**\r\n   * 在当前路由状态变化后触发的钩子函数\r\n   * 这时候就可以在当前钩子下重新获取数据\r\n   * @param {Object} nextProps props对象\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      loginname: nextProps.match.params.id\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div styleName=\"user\">\r\n        <ProfilePanel loginname={this.state.loginname} />\r\n        <OtherTopic simple={false} />\r\n        <RecentReply simple={false} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(Profile, style)\r\n","import React, { Component } from 'react'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport {upvoteComments} from \"../../utils/api\";\r\nimport {report} from \"bfj/src/memory\";\r\n\r\n/**\r\n * 帖子回复组件\r\n */\r\nclass ProfilePanel extends Component {\r\n  /**\r\n   * 将html内容包裹在对象中，key必须是'__html'\r\n   * 详情见：https://react.docschina.org/docs/dom-elements.html#dangerouslysetinnerhtml%E5%87%BD%E6%95%B0\r\n   * @param {String} html html字符串\r\n   */\r\n  getHTML(html) {\r\n    return {\r\n      __html: html\r\n    }\r\n  }\r\n  /*\r\n  点赞动作\r\n  */\r\n upvote(){\r\n     upvoteComments();\r\n }\r\n\r\n  /**\r\n   * 根据点赞人数是否为零来返回不同的html文件。毕竟不需要把 0赞 展示出来\r\n   * @param {Number} length 点赞人数\r\n   */\r\n  getThumbs(length) {\r\n    return (\r\n      <span styleName=\"thumbs\" onClick={this.upvote} >\r\n        <img  onClick={this.upvote} src={require('@src/assets/image/thumbs-up.svg')} alt=\"点赞\" />\r\n        {length}\r\n      </span>\r\n    )\r\n  }\r\n  render() {\r\n    const data = this.props.data.map((reply, index) => {\r\n      return (\r\n        <div key={reply.id}>\r\n          <Link to={'/user/' + reply.author.loginname}>\r\n            <img src={reply.author && reply.author.avatar_url} alt=\"头像\" />\r\n          </Link>\r\n          <div>\r\n            <div styleName=\"info\">\r\n              <p>\r\n                <span>{index + 1}楼&nbsp;</span>\r\n                <Link to={'/user/' + reply.author.loginname}>\r\n                  {reply.author.loginname}\r\n                </Link>\r\n                <span>\r\n                  &nbsp;\r\n                  {moment(reply.create_at, 'YYYY-MM-DD')\r\n                    .startOf('day')\r\n                    .fromNow()}\r\n                </span>\r\n              </p>\r\n              {this.getThumbs(reply.ups.length)}\r\n            </div>\r\n            <p dangerouslySetInnerHTML={this.getHTML(reply.content)} />\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    // 在最前面插入一行React元素，来展示一共有多少条回复信息\r\n    data.unshift(\r\n      <div key={1}>\r\n        <span>{this.props.data.length}</span>&nbsp;回复\r\n      </div>\r\n    )\r\n\r\n    return <div styleName=\"reply\">{data}</div>\r\n  }\r\n}\r\n\r\nexport default CSSModules(ProfilePanel, style)\r\n","import React, { Component } from 'react'\r\nimport { getTopicById } from '@src/utils/api'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport ProfilePanel from '@src/components/ProfilePanel/Index'\r\nimport OtherTopic from '@src/components/OtherTopic/Index'\r\nimport RecentReply from '@src/components/RecentReply/Index'\r\nimport Reply from '@src/components/Reply/Index'\r\nimport '@src/assets/vue.css'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport tab from '@src/utils/tab'\r\nimport { Divider, Skeleton } from 'antd'\r\n\r\nclass Topic extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      topic: {}\r\n    }\r\n  }\r\n  /**\r\n   * 调用接口获取数据\r\n   * P.S. 一般在此钩子下面调用接口或者类似操作\r\n   */\r\n  componentDidMount() {\r\n    this.fetchData(this.props.match.params.id)\r\n  }\r\n  /**\r\n   * 在当前路由状态变化后触发的钩子函数\r\n   * 这时候就可以在当前钩子下重新获取数据\r\n   * @param {Object} nextProps props对象\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    this.fetchData(nextProps.match.params.id)\r\n  }\r\n  /**\r\n   * 封装好的获取数据的函数，这样就不需要每次使用都copy一遍代码了\r\n   */\r\n  fetchData(id) {\r\n    getTopicById(id).then(res => {\r\n      this.setState({\r\n        topic: {\r\n          ...res.data,\r\n          ...res.data.author\r\n        }\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * 将html内容包裹在对象中，key必须是'__html'\r\n   * 详情见：https://react.docschina.org/docs/dom-elements.html#dangerouslysetinnerhtml%E5%87%BD%E6%95%B0\r\n   * @param {String} html html字符串\r\n   */\r\n  getHTML(html) {\r\n    return {\r\n      __html: html\r\n    }\r\n  }\r\n  render() {\r\n    // 在没有数据时，展示骨架图\r\n    if (!this.state.topic.id) {\r\n      return <Skeleton active />\r\n    }\r\n    return (\r\n      <div styleName=\"topic\">\r\n        <div styleName=\"left\">\r\n          <div\r\n            styleName=\"title\"\r\n            dangerouslySetInnerHTML={this.getHTML(this.state.topic.title)}\r\n          />\r\n          <div styleName=\"info\">\r\n            <span>\r\n              发布于&nbsp;\r\n              {moment(this.state.topic.create_at, 'YYYY-MM-DD')\r\n                .startOf('day')\r\n                .fromNow()}\r\n              &nbsp;•&nbsp;\r\n            </span>\r\n            作者：\r\n            <Link to={'/user/' + this.state.topic.loginname}>\r\n              {this.state.topic.loginname}\r\n            </Link>\r\n            &nbsp;•&nbsp;\r\n            <span>{this.state.topic.visit_count}次浏览&nbsp;•&nbsp;</span>\r\n            <span>\r\n              来自：\r\n              {tab[this.state.topic.tab] && tab[this.state.topic.tab].name}\r\n            </span>\r\n          </div>\r\n          <Divider />\r\n          <div\r\n            styleName=\"content\"\r\n            dangerouslySetInnerHTML={this.getHTML(this.state.topic.content)}\r\n          />\r\n          <Reply data={this.state.topic.replies} />\r\n        </div>\r\n        <div styleName=\"right\">\r\n          <ProfilePanel loginname={this.state.topic.loginname} />\r\n          <OtherTopic />\r\n          <RecentReply />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(Topic, style)\r\n","import React, { Component } from 'react'\r\nimport { HashRouter, Route, Redirect } from 'react-router-dom'\r\nimport Header from './components/Header/Index'\r\nimport Home from './views/Home/Index'\r\nimport Profile from './views/Profile/Index'\r\nimport Topic from './views/Topic/Index'\r\nimport './App.scss'\r\n\r\n/**\r\n * 路由设置\r\n */\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <HashRouter>\r\n          <div className=\"box\">\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/topic/:id\" component={Topic} />\r\n            <Route path=\"/user/:id\" component={Profile} />\r\n            <Route exact path=\"/topic\" render={() => <Redirect to=\"/\" />} />\r\n            <Route exact path=\"/user\" render={() => <Redirect to=\"/\" />} />\r\n          </div>\r\n        </HashRouter>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport 'antd/dist/antd.css'\r\nimport App from './App'\r\nimport { LocaleProvider } from 'antd'\r\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\n\r\nmoment.locale('zh-cn')\r\n\r\nReactDOM.render(\r\n  <LocaleProvider locale={zhCN}>\r\n    <App />\r\n  </LocaleProvider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}