{"version":3,"sources":["components/Header/Index.module.scss","components/Topics/Index.module.scss","views/Home/Index.module.scss","views/Profile/Index.module.scss","components/ProfilePanel/Index.module.scss","components/OtherTopic/Index.module.scss","components/RecentReply/Index.module.scss","views/Topic/Index.module.scss","components/Reply/Index.module.scss","assets/image/cnodejs.svg","assets/image/thumbs-up.svg","components/Header/Index.js","utils/request.js","utils/tab.js","components/Topics/Index.js","views/Home/Index.js","utils/api.js","utils/eventProxy.js","components/ProfilePanel/Index.js","components/OtherTopic/Index.js","components/RecentReply/Index.js","views/Profile/Index.js","components/Reply/Index.js","views/Topic/Index.js","App.js","index.js"],"names":["module","exports","header","search-btn","topic","count","title","time","home","user","panel","inside-divider","avatar","divider","content","left","info","right","reply","thumbs","__webpack_require__","p","Header","state","visible","handleOk","_this","setState","showModal","search","document","getElementById","value","window","open","react_default","a","createElement","styleName","href","src","require","alt","onSubmit","this","className","autoFocus","id","type","autoComplete","placeholder","onClick","modal","onOk","onCancel","target","rel","icon","theme","twoToneColor","Component","CSSModules","style","error","message","service","axios","create","baseURL","timeout","interceptors","request","use","config","err","Promise","reject","response","data","tab","good","name","color","job","ask","share","Topics","props","list","length","skeleton","active","items","map","item","author","loginname","key","Link","to","avatar_url","reply_count","visit_count","tag","moment","last_reply_at","startOf","fromNow","TabPane","Tabs","Home","Object","classCallCheck","_super","call","scrollMethod","sumH","body","scrollHeight","documentElement","clientHeight","scrollTop","getTopics","tabChanged","store","limit","page","addEventListener","removeEventListener","_this2","url","method","params","then","res","spin","spinning","tabs","defaultActiveKey","onChange","Topics_Index","eventProxy","onObj","oneObj","on","fn","undefined","push","one","off","trigger","args","arguments","concat","Array","prototype","slice","i","apply","ProfilePanel","fetchData","nextProps","getUserByName","score","githubUsername","create_at","OtherTopic","isUnmounted","_this3","recent_topics","temp","simple","defaultProps","RecentReply","recent_replies","Profile","match","ProfilePanel_Index","OtherTopic_Index","RecentReply_Index","html","__html","index","getThumbs","ups","dangerouslySetInnerHTML","getHTML","unshift","Topic","getTopicById","objectSpread","Reply_Index","replies","App","Index","HashRouter","Route","exact","path","component","render","Redirect","locale","ReactDOM","config_provider","zhCN","src_App_0"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,OAAA,sBAAAC,aAAA,gDCAlBH,EAAAC,QAAA,CAAkBG,MAAA,qBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,KAAA,0CCAlBP,EAAAC,QAAA,CAAkBO,KAAA,0CCAlBR,EAAAC,QAAA,CAAkBQ,KAAA,0CCAlBT,EAAAC,QAAA,CAAkBS,MAAA,qBAAAD,KAAA,0CCAlBT,EAAAC,QAAA,CAAkBS,MAAA,qBAAAH,KAAA,oBAAAI,iBAAA,8BAAAC,OAAA,sBAAAC,QAAA,6CCAlBb,EAAAC,QAAA,CAAkBS,MAAA,qBAAAH,KAAA,oBAAAI,iBAAA,8BAAAC,OAAA,sBAAAC,QAAA,6CCAlBb,EAAAC,QAAA,CAAkBG,MAAA,qBAAAE,MAAA,qBAAAQ,QAAA,uBAAAC,KAAA,oBAAAC,KAAA,oBAAAC,MAAA,2CCAlBjB,EAAAC,QAAA,CAAkBiB,MAAA,qBAAAF,KAAA,oBAAAG,OAAA,wGCDlBnB,EAAAC,QAAiBmB,EAAAC,EAAuB,yDCAxCrB,EAAAC,QAAiBmB,EAAAC,EAAuB,+uBCOlCC,oMAKJC,MAAQ,CAAEC,SAAS,KAMnBC,SAAW,WACTC,EAAKC,SAAS,CACZH,SAAS,OAMbI,UAAY,WACVF,EAAKC,SAAS,CACZH,SAAS,OAGXK,OAAS,WAKT,MAJsD,KAAlDC,SAASC,eAAe,gBAAgBC,QAC1CC,OAAOC,KAAM,+CAAqDJ,SAASC,eAAe,gBAAgBC,OAC1GF,SAASC,eAAe,gBAAgBC,MAAQ,KAE3C,+CAKT,WACE,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,gBACNJ,EAAAC,EAAAC,cAAA,OACEG,IAAKC,EAAQ,KACbC,IAAI,sBAGRP,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,QAAMM,SAAUC,KAAKf,OAAQgB,UAAU,cACrCV,EAAAC,EAAAC,cAAA,SAAOS,WAAS,EAACC,GAAG,eAAeF,UAAU,aAAaG,KAAK,OACxDC,aAAa,MAAMC,YAAY,qBAGxCf,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,aAAaM,QAASP,KAAKf,QAA3C,iBAKFM,EAAAC,EAAAC,cAAA,QAAMc,QAASP,KAAKhB,UAAWiB,UAAU,SAAzC,iBAGFV,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACE9C,MAAM,iCACNkB,QAASoB,KAAKrB,MAAMC,QACpB6B,KAAMT,KAAKnB,SACX6B,SAAUV,KAAKnB,UAGfU,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAAA,KACEE,KAAK,gCACLgB,OAAO,SACPC,IAAI,gCAHN,sBAOArB,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,KACIE,KAAK,+BACLgB,OAAO,SACPC,IAAI,gCAHR,gBAMArB,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,KACIE,KAAK,8BACLgB,OAAO,SACPC,IAAI,gCAHR,iBAOFrB,EAAAC,EAAAC,cAAA,8BAEEF,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMT,KAAK,OAAOU,MAAM,UAAUC,aAAa,YAC/CxB,EAAAC,EAAAC,cAAA,KACEE,KAAK,6CACLgB,OAAO,SACPC,IAAI,gCAHN,iBAOArB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMT,KAAK,OAAOU,MAAM,UAAUC,aAAa,YAVjD,4BAYExB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAMT,KAAK,OAAOU,MAAM,UAAUC,aAAa,aAEjDxB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,oCA/GOuB,aAwHNC,MAAWvC,EAAQwC,gCCxH5BC,EAAQ,WACZC,IAAQD,MAAM,6CAAW,IAGrBE,EAAUC,IAAMC,OAAO,CAC3BC,QAAS,6BACTC,QAAS,MAIXJ,EAAQK,aAAaC,QAAQC,IAC3B,SAAAC,GACE,OAAOA,GAET,SAAAC,GACEX,IACAY,QAAQC,OAAOF,KAKnBT,EAAQK,aAAaO,SAASL,IAC5B,SAAAK,GACE,OAAOA,EAASC,MAElB,SAAAJ,GAEE,OADAX,IACOY,QAAQC,OAAOF,KAIXT,6DCnCAc,EAAA,CACbC,KAAM,CACJC,KAAM,eACNC,MAAO,WAETC,IAAK,CACHF,KAAM,eACNC,MAAO,QAETE,IAAK,CACHH,KAAM,eACNC,MAAO,YAETG,MAAO,CACLJ,KAAM,eACNC,MAAO,4dCNLI,oJACF,WAEI,GAA+B,IAA3B1C,KAAK2C,MAAMC,KAAKC,OAChB,OAAOtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUC,QAAM,IAE3B,IAAMC,EAAQhD,KAAK2C,MAAMC,KAAKK,IAAI,SAAAC,GAC9B,OAAIA,EAAKC,OAAOC,UAIZ7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ2D,IAAKH,EAAK/C,IAC7BZ,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,GAAI,SAAWL,EAAKC,OAAOC,WAC7B7D,EAAAC,EAAAC,cAAA,OAAKG,IAAKsD,EAAKC,OAAOK,WAAY1D,IAAI,8BAE1CP,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SACxBH,EAAAC,EAAAC,cAAA,UAAKyD,EAAKO,aADF,IACoBlE,EAAAC,EAAAC,cAAA,UAAKyD,EAAKQ,cAE9BnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAKrB,MAAOH,EAAIe,EAAKf,MAAQA,EAAIe,EAAKf,KAAKG,OACtCH,EAAIe,EAAKf,MAAQA,EAAIe,EAAKf,KAAKE,MAEpC9C,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAM5D,UAAU,QAAQ6D,GAAI,UAAYL,EAAK/C,IACxC+C,EAAKxF,OAEV6B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACvBkE,IAAOV,EAAKW,cAAe,cACvBC,QAAQ,OACRC,YAnBM,OAyBf,OAAOxE,EAAAC,EAAAC,cAAA,WAAMuD,UAjCAhC,aAqCNC,MAAWyB,EAAQxB,8eC1ClC,IAAM8C,EAAUC,IAAKD,QAKfE,0CACJ,SAAAA,IAAc,IAAApF,EAAA,OAAAqF,OAAAC,EAAA,EAAAD,CAAAnE,KAAAkE,IACZpF,EAAAuF,EAAAC,KAAAtE,OAkDFuE,aAAe,WACb,IAAMC,EACJtF,SAASuF,KAAKC,cAAgBxF,SAASyF,gBAAgBD,aAC3CxF,SAASyF,gBAAgBC,cAErC1F,SAASuF,KAAKI,WAAa3F,SAASyF,gBAAgBE,WAChC,IAAML,GAC1B1F,EAAKgG,aA1DKhG,EAqEdiG,WAAa,SAAA5C,GACX,IAAM6C,EAAQlG,EAAKH,MAAMqG,MAGpBA,EAAM7C,GAcXrD,EAAKC,SAAS,CACZoD,MACA8C,MAAOD,EAAM7C,GAAK8C,MAClBrC,KAAMoC,EAAM7C,GAAKD,OAhBjBpD,EAAKC,SACH,CACEoD,MACA8C,MAAO,GACPrC,KAAM,IAER,WACE9D,EAAKgG,eA/EXhG,EAAKH,MAAQ,CACXuG,KAAM,EACND,MAAO,GACPrC,KAAM,GACNoC,MAAO,GACP7C,IAAK,OAPKrD,uDAed,WACEkB,KAAK8E,YACLzF,OAAO8F,iBAAiB,SAAUnF,KAAKuE,kDAKzC,WACElF,OAAO+F,oBAAoB,SAAUpF,KAAKuE,uCAK5C,WAAY,ICtCWrC,EDsCXmD,EAAArF,KACJrB,EAAQqB,KAAKrB,OCvCEuD,EDwCX,CACRgD,KAAMvG,EAAMuG,KACZD,MAAOtG,EAAMsG,MACb9C,IAAKxD,EAAMwD,KC1CRR,EAAQ,CACb2D,IAAK,UACLC,OAAQ,MACRC,OAAQtD,KDwCLuD,KAAK,SAAAC,GACN,IAAMV,EAAQrG,EAAMqG,MAEpBK,EAAKtG,SAAS,CACZ6D,KAAM8C,EAAIxD,KACV+C,MAAOI,EAAK1G,MAAMsG,MAAQ,KAG5BD,EAAMrG,EAAMwD,KAAO,CACjB8C,MAAOtG,EAAMsG,MACb/C,KAAMwD,EAAIxD,8BAiDhB,WACE,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMC,UAAU,GACdrG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoG,EAAA,EAAD,CAAMC,iBAAiB,GAAGC,SAAU/F,KAAK+E,YACvCxF,EAAAC,EAAAC,cAACuE,EAAD,CAAS7B,IAAI,eAAKkB,IAAI,OACpB9D,EAAAC,EAAAC,cAACuG,EAAD,CAAQpD,KAAM5C,KAAKrB,MAAMiE,QAE3BrD,EAAAC,EAAAC,cAACuE,EAAD,CAAS7B,IAAI,eAAKkB,IAAI,QACpB9D,EAAAC,EAAAC,cAACuG,EAAD,CAAQpD,KAAM5C,KAAKrB,MAAMiE,QAE3BrD,EAAAC,EAAAC,cAACuE,EAAD,CAAS7B,IAAI,eAAKkB,IAAI,SACpB9D,EAAAC,EAAAC,cAACuG,EAAD,CAAQpD,KAAM5C,KAAKrB,MAAMiE,QAE3BrD,EAAAC,EAAAC,cAACuE,EAAD,CAAS7B,IAAI,eAAKkB,IAAI,OACpB9D,EAAAC,EAAAC,cAACuG,EAAD,CAAQpD,KAAM5C,KAAKrB,MAAMiE,QAE3BrD,EAAAC,EAAAC,cAACuE,EAAD,CAAS7B,IAAI,eAAKkB,IAAI,OACpB9D,EAAAC,EAAAC,cAACuG,EAAD,CAAQpD,KAAM5C,KAAKrB,MAAMiE,mBAjHtB5B,aA2HJC,MAAWiD,EAAMhD,yCEvFjB+E,EA5CI,CACjBC,MAAO,GACPC,OAAQ,GACRC,GAAI,SAAS/C,EAAKgD,QACQC,IAApBtG,KAAKkG,MAAM7C,KACbrD,KAAKkG,MAAM7C,GAAO,IAGpBrD,KAAKkG,MAAM7C,GAAKkD,KAAKF,IAEvBG,IAAK,SAASnD,EAAKgD,QACQC,IAArBtG,KAAKmG,OAAO9C,KACdrD,KAAKmG,OAAO9C,GAAO,IAGrBrD,KAAKmG,OAAO9C,GAAKkD,KAAKF,IAExBI,IAAK,SAASpD,GACZrD,KAAKkG,MAAM7C,GAAO,GAClBrD,KAAKmG,OAAO9C,GAAO,IAErBqD,QAAS,WACP,IAAIrD,EAAKsD,EACT,GAAyB,IAArBC,UAAU/D,OACZ,OAAO,EAKT,GAHAQ,EAAMuD,UAAU,GAChBD,EAAO,GAAGE,OAAOC,MAAMC,UAAUC,MAAM1C,KAAKsC,UAAW,SAE/BN,IAApBtG,KAAKkG,MAAM7C,IAAsBrD,KAAKkG,MAAM7C,GAAKR,OAAS,EAC5D,IAAK,IAAIoE,KAAKjH,KAAKkG,MAAM7C,GACvBrD,KAAKkG,MAAM7C,GAAK4D,GAAGC,MAAM,KAAMP,GAGnC,QAAyBL,IAArBtG,KAAKmG,OAAO9C,IAAsBrD,KAAKmG,OAAO9C,GAAKR,OAAS,EAAG,CACjE,IAAK,IAAIoE,KAAKjH,KAAKmG,OAAO9C,GACxBrD,KAAKmG,OAAO9C,GAAK4D,GAAGC,MAAM,KAAMP,GAChC3G,KAAKmG,OAAO9C,GAAK4D,QAAKX,EAExBtG,KAAKmG,OAAO9C,GAAO,gdC/BnB8D,4CAKJ,SAAAA,IAAc,IAAArI,EAAA,OAAAqF,OAAAC,EAAA,EAAAD,CAAAnE,KAAAmH,IACZrI,EAAAuF,EAAAC,KAAAtE,OACKrB,MAAQ,CACXd,KAAM,IAHIiB,uDAUd,WACEkB,KAAKoH,UAAUpH,KAAK2C,MAAMS,oDAQ5B,SAA0BiE,GACxBrH,KAAKoH,UAAUC,EAAUjE,oCAK3B,SAAUA,GAAW,IAAAiC,EAAArF,MFtBM,SAAAoD,GAC3B,OAAOzB,EAAQ,CACb2D,IAAG,SAAAuB,OAAWzD,GACdmC,OAAQ,SEoBR+B,CAAclE,GAAWqC,KAAK,SAAAC,GAC5BL,EAAKtG,SAAS,CACZlB,KAAM6H,EAAIxD,OAEZ+D,EAAWS,QAAQ,OAAQhB,EAAIxD,8BAInC,WAEE,OAAKlC,KAAKrB,MAAMd,KAAKuF,UAInB7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAM5D,UAAU,OAAO6D,GAAI,SAAWvD,KAAKrB,MAAMd,KAAKuF,WACpD7D,EAAAC,EAAAC,cAAA,OAAKG,IAAKI,KAAKrB,MAAMd,KAAK2F,WAAY1D,IAAI,6BAC1CP,EAAAC,EAAAC,cAAA,YAAOO,KAAKrB,MAAMd,KAAKuF,YAEzB7D,EAAAC,EAAAC,cAAA,gCAASO,KAAKrB,MAAMd,KAAK0J,OACzBhI,EAAAC,EAAAC,cAAA,0BAEEF,EAAAC,EAAAC,cAAA,KACEE,KAAM,sBAAwBK,KAAKrB,MAAMd,KAAK2J,eAC9C7G,OAAO,SACPC,IAAI,gCAEHZ,KAAKrB,MAAMd,KAAK2J,iBAGrBjI,EAAAC,EAAAC,cAAA,4CAEGmE,IAAO5D,KAAKrB,MAAMd,KAAK4J,UAAW,cAChC3D,QAAQ,OACRC,YAvBAxE,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUC,QAAM,WA1CF/B,aAwEZC,OAAWkG,GAAcjG,8eCzElCwG,4CAOJ,SAAAA,IAAc,IAAA5I,EAAA,OAAAqF,OAAAC,EAAA,EAAAD,CAAAnE,KAAA0H,IACZ5I,EAAAuF,EAAAC,KAAAtE,OACKrB,MAAQ,CACXd,KAAM,IAHIiB,uDAUd,WAAoB,IAAAuG,EAAArF,KAElBA,KAAK2H,aAAc,EACnB1B,EAAWG,GAAG,OAAQ,SAAAlE,GAEfmD,EAAKsC,aACRtC,EAAKtG,SAAS,CACZlB,KAAMqE,0CAQd,WACElC,KAAK2H,aAAc,wBAGrB,WAAS,IAAAC,EAAA5H,KAEP,IAAKA,KAAKrB,MAAMd,KAAKgK,cACnB,OAAOtI,EAAAC,EAAAC,cAAA,YAGT,IAAMuD,EAAQhD,KAAKrB,MAAMd,KAAKgK,cAAc5E,IAAI,SAAAC,GAC9C,IAAI4E,EAAOvI,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,GAAI,UAAYL,EAAK/C,IAAK+C,EAAKxF,OAoBhD,OAlBKkK,EAAKjF,MAAMoF,SACdD,EACEvI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAM5D,UAAU,SAAS6D,GAAI,SAAWL,EAAKC,OAAOC,WAClD7D,EAAAC,EAAAC,cAAA,OAAKG,IAAKsD,EAAKC,QAAUD,EAAKC,OAAOK,WAAY1D,IAAI,kBAEvDP,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMD,IAAKH,EAAK/C,GAAIoD,GAAI,UAAYL,EAAK/C,IACtC+C,EAAKxF,OAER6B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACbkE,IAAOV,EAAKW,cAAe,cACzBC,QAAQ,OACRC,WAELxE,EAAAC,EAAAC,cAACxB,GAAA,EAAD,CAASyB,UAAU,qBAIlBH,EAAAC,EAAAC,cAAA,OAAK4D,IAAKH,EAAK/C,IAAK2H,KAE7B,OACEvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAACxB,GAAA,EAAD,CAASyB,UAAU,YAClBsD,UArEgBhC,aAAnB0G,GAIGM,aAAe,CACpBD,QAAQ,GAsEG9G,WAAWyG,GAAYxG,qeC9EhC+G,4CAOF,SAAAA,IAAc,IAAAnJ,EAAA,OAAAqF,OAAAC,EAAA,EAAAD,CAAAnE,KAAAiI,IACVnJ,EAAAuF,EAAAC,KAAAtE,OACKrB,MAAQ,CACTd,KAAM,IAHAiB,uDAUd,WAAoB,IAAAuG,EAAArF,KAEhBA,KAAK2H,aAAc,EACnB1B,EAAWG,GAAG,OAAQ,SAAAlE,GAEbmD,EAAKsC,aACNtC,EAAKtG,SAAS,CACVlB,KAAMqE,0CAQtB,WACIlC,KAAK2H,aAAc,wBAGvB,WAAS,IAAAC,EAAA5H,KAEL,IAAKA,KAAKrB,MAAMd,KAAKqK,eACjB,OAAO3I,EAAAC,EAAAC,cAAA,YAGX,IAAMuD,EAAQhD,KAAKrB,MAAMd,KAAKqK,eAAejF,IAAI,SAAAC,GAC7C,IAAI4E,EACAvI,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMD,IAAKH,EAAK/C,GAAIoD,GAAI,UAAYL,EAAK/C,IACpC+C,EAAKxF,OAsBd,OAlBKkK,EAAKjF,MAAMoF,SACZD,EACIvI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAM5D,UAAU,SAAS6D,GAAI,SAAWL,EAAKC,OAAOC,WAChD7D,EAAAC,EAAAC,cAAA,OAAKG,IAAKsD,EAAKC,QAAUD,EAAKC,OAAOK,WAAY1D,IAAI,kBAEzDP,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMD,IAAKH,EAAK/C,GAAIoD,GAAI,UAAYL,EAAK/C,IACpC+C,EAAKxF,OAEV6B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACzBkE,IAAOV,EAAKW,cAAe,cACvBC,QAAQ,OACRC,WAEKxE,EAAAC,EAAAC,cAACxB,GAAA,EAAD,CAASyB,UAAU,qBAIxBH,EAAAC,EAAAC,cAAA,OAAK4D,IAAKH,EAAK/C,IAAK2H,KAE/B,OACIvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAACxB,GAAA,EAAD,CAASyB,UAAU,YAClBsD,UAzEShC,aAApBiH,GAIKD,aAAe,CAClBD,QAAQ,GA0ED9G,WAAWgH,GAAa/G,gdChFjCiH,4CACJ,SAAAA,IAAc,IAAArJ,EAAA,OAAAqF,OAAAC,EAAA,EAAAD,CAAAnE,KAAAmI,IACZrJ,EAAAuF,EAAAC,KAAAtE,OACKrB,MAAQ,CACXyE,UAAW,IAHDtE,wDAUd,WACEkB,KAAKjB,SAAS,CACZqE,UAAWpD,KAAK2C,MAAMyF,MAAM5C,OAAOrF,8CAQvC,SAA0BkH,GACxBrH,KAAKjB,SAAS,CACZqE,UAAWiE,EAAUe,MAAM5C,OAAOrF,2BAGtC,WACE,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAC4I,GAAD,CAAcjF,UAAWpD,KAAKrB,MAAMyE,YACpC7D,EAAAC,EAAAC,cAAC6I,GAAD,CAAYP,QAAQ,IACpBxI,EAAAC,EAAAC,cAAC8I,GAAD,CAAaR,QAAQ,YA/BP/G,aAqCPC,OAAWkH,GAASjH,mgBCnC7BiG,uJAMF,SAAQqB,GACJ,MAAO,CACHC,OAAQD,4BAOhB,SAAU3F,GACN,OAAKA,EAIDtD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACpBH,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,EAAQ,KAAoCC,IAAI,iBACjD+C,GALEtD,EAAAC,EAAAC,cAAA,mCASf,WAAS,IAAAX,EAAAkB,KACCkC,EAAOlC,KAAK2C,MAAMT,KAAKe,IAAI,SAAC3E,EAAOoK,GACrC,OACInJ,EAAAC,EAAAC,cAAA,OAAK4D,IAAK/E,EAAM6B,IACZZ,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,GAAI,SAAWjF,EAAM6E,OAAOC,WAC9B7D,EAAAC,EAAAC,cAAA,OAAKG,IAAKtB,EAAM6E,QAAU7E,EAAM6E,OAAOK,WAAY1D,IAAI,kBAE3DP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,YAAOiJ,EAAQ,EAAf,cACAnJ,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,GAAI,SAAWjF,EAAM6E,OAAOC,WAC7B9E,EAAM6E,OAAOC,WAElB7D,EAAAC,EAAAC,cAAA,mBAEKmE,IAAOtF,EAAMmJ,UAAW,cACpB3D,QAAQ,OACRC,YAGZjF,EAAK6J,UAAUrK,EAAMsK,IAAI/F,SAE9BtD,EAAAC,EAAAC,cAAA,KAAGoJ,wBAAyB/J,EAAKgK,QAAQxK,EAAMJ,eAY/D,OANAgE,EAAK6G,QACDxJ,EAAAC,EAAAC,cAAA,OAAK4D,IAAK,GACN9D,EAAAC,EAAAC,cAAA,YAAOO,KAAK2C,MAAMT,KAAKW,QAD3B,qBAKGtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASwC,UA7DZlB,aAiEZC,OAAWkG,GAAcjG,udC5DlC8H,4CACJ,SAAAA,IAAc,IAAAlK,EAAA,OAAAqF,OAAAC,EAAA,EAAAD,CAAAnE,KAAAgJ,IACZlK,EAAAuF,EAAAC,KAAAtE,OACKrB,MAAQ,CACXnB,MAAO,IAHGsB,uDAUd,WACEkB,KAAKoH,UAAUpH,KAAK2C,MAAMyF,MAAM5C,OAAOrF,6CAOzC,SAA0BkH,GACxBrH,KAAKoH,UAAUC,EAAUe,MAAM5C,OAAOrF,6BAKxC,SAAUA,GAAI,IAAAkF,EAAArF,MP3BY,SAAAG,GAC1B,OAAOwB,EAAQ,CACb2D,IAAG,UAAAuB,OAAY1G,GACfoF,OAAQ,SOyBR0D,CAAa9I,GAAIsF,KAAK,SAAAC,GACpBL,EAAKtG,SAAS,CACZvB,MAAM2G,OAAA+E,GAAA,EAAA/E,CAAA,GACDuB,EAAIxD,KACJwD,EAAIxD,KAAKiB,mCAUpB,SAAQqF,GACN,MAAO,CACLC,OAAQD,yBAGZ,WAEE,OAAKxI,KAAKrB,MAAMnB,MAAM2C,GAIpBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,QACVmJ,wBAAyB7I,KAAK8I,QAAQ9I,KAAKrB,MAAMnB,MAAME,SAEzD6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,qCAEGmE,IAAO5D,KAAKrB,MAAMnB,MAAMiK,UAAW,cACjC3D,QAAQ,OACRC,UAJL,kBADF,qBASExE,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAMC,GAAI,SAAWvD,KAAKrB,MAAMnB,MAAM4F,WACnCpD,KAAKrB,MAAMnB,MAAM4F,WAVtB,iBAaE7D,EAAAC,EAAAC,cAAA,YAAOO,KAAKrB,MAAMnB,MAAMkG,YAAxB,oCACAnE,EAAAC,EAAAC,cAAA,iCAEG0C,EAAInC,KAAKrB,MAAMnB,MAAM2E,MAAQA,EAAInC,KAAKrB,MAAMnB,MAAM2E,KAAKE,OAG5D9C,EAAAC,EAAAC,cAACxB,GAAA,EAAD,MACAsB,EAAAC,EAAAC,cAAA,OACEC,UAAU,UACVmJ,wBAAyB7I,KAAK8I,QAAQ9I,KAAKrB,MAAMnB,MAAMU,WAEzDqB,EAAAC,EAAAC,cAAC0J,GAAD,CAAOjH,KAAMlC,KAAKrB,MAAMnB,MAAM4L,WAEhC7J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAC4I,GAAD,CAAcjF,UAAWpD,KAAKrB,MAAMnB,MAAM4F,YAC1C7D,EAAAC,EAAAC,cAAC6I,GAAD,MACA/I,EAAAC,EAAAC,cAAC8I,GAAD,QAtCGhJ,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUC,QAAM,WAhDT/B,aA6FLC,OAAW+H,GAAO9H,udC7ElBmI,sJAlBX,WACI,OACI9J,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6J,EAAD,MACA/J,EAAAC,EAAAC,cAAC8J,EAAA,EAAD,KACIhK,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACXV,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzF,IACjC3E,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWX,KACpCzJ,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWxB,KACnC5I,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASE,OAAQ,kBAAMrK,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAUtG,GAAG,SACtDhE,EAAAC,EAAAC,cAAC+J,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQE,OAAQ,kBAAMrK,EAAAC,EAAAC,cAACoK,EAAA,EAAD,CAAUtG,GAAG,mBAX3DvC,kDCAlB4C,IAAOkG,OAAO,SAEdC,IAASH,OACLrK,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAgBF,OAAQG,MACpB1K,EAAAC,EAAAC,cAACyK,GAAD,OAEJhL,SAASC,eAAe","file":"static/js/main.8c591b23.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Index_header__3MYWj\",\"search-btn\":\"Index_search-btn__1H-VS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topic\":\"Index_topic__3FooA\",\"count\":\"Index_count__39qmL\",\"title\":\"Index_title__13tQ6\",\"time\":\"Index_time__3GwV9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Index_home__3UyFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Index_user__2taYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Index_panel__2FBzm\",\"user\":\"Index_user__80xoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Index_panel__iQ5_F\",\"time\":\"Index_time__1bcag\",\"inside-divider\":\"Index_inside-divider__3gBn1\",\"avatar\":\"Index_avatar__3xHOD\",\"divider\":\"Index_divider__3xIDt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Index_panel__2ecGN\",\"time\":\"Index_time__1WIMC\",\"inside-divider\":\"Index_inside-divider__1znSY\",\"avatar\":\"Index_avatar__34OaS\",\"divider\":\"Index_divider__3PEyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topic\":\"Index_topic__OQ-jS\",\"title\":\"Index_title__3sTDP\",\"content\":\"Index_content__1Mmd4\",\"left\":\"Index_left__UXxiz\",\"info\":\"Index_info__l7Jq6\",\"right\":\"Index_right__2tco0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reply\":\"Index_reply__F7pPj\",\"info\":\"Index_info__1E4Uz\",\"thumbs\":\"Index_thumbs__1NlW4\"};","module.exports = __webpack_public_path__ + \"static/media/cnodejs.e2b40b75.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbs-up.b296ff53.svg\";","import React, { Component } from 'react'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport { Modal, Icon } from 'antd'\r\n/**\r\n * 网站的顶部Header组件\r\n */\r\nclass Header extends Component {\r\n  /**\r\n   * 给state设置默认值\r\n   * P.S. 另外一种设置方法见ProfilePanel/Index.js文件\r\n   */\r\n  state = { visible: false }\r\n\r\n\r\n  /**\r\n   * 隐藏Modal(模态)框\r\n   */\r\n  handleOk = () => {\r\n    this.setState({\r\n      visible: false\r\n    })\r\n  }\r\n  /**\r\n   * 显示Modal(模态)框\r\n   */\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    })\r\n  }\r\n    search = () =>{\r\n    if (document.getElementById(\"search_input\").value !== \"\") {\r\n      window.open (\"https://www.baidu.com/s?wd=\" + \"site:cnodejs.org \" +document.getElementById(\"search_input\").value);\r\n      document.getElementById(\"search_input\").value = \"\";\r\n    }\r\n    return false;\r\n  }//搜索跳转百度\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div styleName=\"header\">\r\n        <div>\r\n          <a href=\"./index.html\">\r\n            <img\r\n              src={require('@src/assets/image/cnodejs.svg')}\r\n              alt=\"网站logo\"\r\n            />\r\n          </a>\r\n          <a >\r\n          <form onSubmit={this.search} className=\"search-box\">\r\n            <input autoFocus id=\"search_input\" className=\"search-txt\" type=\"text\"\r\n                   autoComplete=\"off\" placeholder=\"Type to search\" />\r\n          </form>\r\n          </a>\r\n          <a>\r\n            <span className=\"search-btn\" onClick={this.search} >\r\n              搜索\r\n            </span>\r\n          </a>\r\n\r\n          <span onClick={this.showModal} className=\"about\">关于</span>\r\n\r\n        </div>\r\n        <Modal\r\n          title=\"关于本项目\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleOk}\r\n        >\r\n          {/* P.S. 当使用_blank时有一个容易忽略的安全漏洞，需要注意：https://developers.google.com/web/tools/lighthouse/audits/noopener?hl=zh-cn */}\r\n          <p>\r\n            作者：\r\n            <a\r\n              href=\"https://github.com/panningzhi\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow noopener noreferrer\"\r\n            >\r\n              盘凝知\r\n            </a>\r\n            <a> / </a>\r\n            <a\r\n                href=\"https://github.com/lingwu-hb\"\r\n                target=\"_blank\"\r\n                rel=\"nofollow noopener noreferrer\">\r\n              韩博\r\n            </a>\r\n            <a> / </a>\r\n            <a\r\n                href=\"https://github.com/ChenZhe0\"\r\n                target=\"_blank\"\r\n                rel=\"nofollow noopener noreferrer\">\r\n              陈哲\r\n            </a>\r\n          </p>\r\n          <p>\r\n            源码：\r\n            <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n            <a\r\n              href=\"https://github.com/lingwu-hb/CnodeSimulate\"\r\n              target=\"_blank\"\r\n              rel=\"nofollow noopener noreferrer\"\r\n            >\r\n              CnodeSimulate\r\n            </a>\r\n            <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n            &nbsp;欢迎Star~&nbsp;\r\n            <Icon type=\"star\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n          </p>\r\n          <div>\r\n            <p>技术栈：</p>\r\n            <ul>\r\n              <li>React</li>\r\n              <li>React Router</li>\r\n              <li>Ant Design</li>\r\n              <li>Axios</li>\r\n              <li>CnodeJS API</li>\r\n            </ul>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(Header, style)\r\n","import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\n/**\r\n * 封装axios，实现发送/响应接口的拦截，来实现统一提示等效果\r\n */\r\n\r\nconst error = () => {\r\n  message.error('数据加载失败！', 1)\r\n}\r\n\r\nconst service = axios.create({\r\n  baseURL: 'https://cnodejs.org/api/v1',\r\n  timeout: 5000 // 请求超时时间限制\r\n})\r\n\r\n// 请求拦截器\r\nservice.interceptors.request.use(\r\n  config => {\r\n    return config\r\n  },\r\n  err => {\r\n    error()\r\n    Promise.reject(err)\r\n  }\r\n)\r\n\r\n// 响应拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n    return response.data\r\n  },\r\n  err => {\r\n    error()\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\nexport default service\r\n","/**\r\n * 帖子的tab字典，因为有好几个地方都要用到，所以单独提取出来\r\n */\r\nexport default {\r\n  good: {\r\n    name: '精华',\r\n    color: 'magenta'\r\n  },\r\n  job: {\r\n    name: '招聘',\r\n    color: 'blue'\r\n  },\r\n  ask: {\r\n    name: '问答',\r\n    color: 'geekblue'\r\n  },\r\n  share: {\r\n    name: '分享',\r\n    color: 'green'\r\n  }\r\n}\r\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Tag } from 'antd'\nimport moment from 'moment'\nimport style from './Index.module.scss'\nimport CSSModules from 'react-css-modules'\nimport tab from '@src/utils/tab'\nimport { Skeleton } from 'antd'\n\n/**\n * 首页帖子列表组件\n */\nclass Topics extends Component {\n    render() {\n        // 在没有数据时，展示骨架图\n        if (this.props.list.length === 0) {\n            return <Skeleton active />\n        }\n        const items = this.props.list.map(item => {\n            if(!item.author.loginname){\n                return null\n            }\n            return (\n                <div styleName=\"topic\" key={item.id}>\n                    <Link to={'/user/' + item.author.loginname}>\n                        <img src={item.author.avatar_url} alt=\"用户头像\" />\n                    </Link>\n                    <span styleName=\"count\">\n            <em>{item.reply_count}</em>/<em>{item.visit_count}</em>\n          </span>\n                    <Tag color={tab[item.tab] && tab[item.tab].color}>\n                        {tab[item.tab] && tab[item.tab].name}\n                    </Tag>\n                    <Link styleName=\"title\" to={'/topic/' + item.id}>\n                        {item.title}\n                    </Link>\n                    <span styleName=\"time\">\n            {moment(item.last_reply_at, 'YYYY-MM-DD')\n                .startOf('day')\n                .fromNow()}\n          </span>\n                </div>\n            )\n        })\n\n        return <div>{items}</div>\n    }\n}\n\nexport default CSSModules(Topics, style)\n","import React, { Component } from 'react'\nimport { getTopics } from '@src/utils/api'\nimport Topics from '@src/components/Topics/Index'\nimport style from './Index.module.scss'\nimport CSSModules from 'react-css-modules'\nimport { Tabs, Spin } from 'antd'\n\nconst TabPane = Tabs.TabPane\n\n/**\n * 网站首页\n */\nclass Home extends Component {\n  constructor() {\n    super()\n    this.state = {\n      page: 1,\n      limit: 20,\n      list: [],\n      store: {}, // 存储所有Tab对应的数据，因为切换Tab后就没必要重新以limit:20加载数据。\n      tab: 'all' // 当前Tab，声明在全局变量里是为了滚动时相关函数也可以获取的到\n    }\n  }\n  /**\n   * 1. 调用接口获取数据\n   * 2. 绑定窗口滚动监听函数\n   * P.S. 一般在此钩子下面调用接口或者类似操作\n   */\n  componentDidMount() {\n    this.getTopics()\n    window.addEventListener('scroll', this.scrollMethod)\n  }\n  /**\n   * 组件被销毁时，记得移除绑定的滚动事件\n   */\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollMethod)\n  }\n  /**\n   * 封装好的获取首页数据的函数，这样就不需要每次使用都copy一遍代码了\n   */\n  getTopics() {\n    const state = this.state\n    getTopics({\n      page: state.page,\n      limit: state.limit,\n      tab: state.tab\n    }).then(res => {\n      const store = state.store\n\n      this.setState({\n        list: res.data,\n        limit: this.state.limit + 10\n      })\n      // 将数据存储到对应的key下\n      store[state.tab] = {\n        limit: state.limit,\n        data: res.data\n      }\n    })\n  }\n  /**\n   * 滚动函数，判断当前滚动条是否到了底部来决定是否重新拉取数据\n   */\n  scrollMethod = () => {\n    const sumH =\n      document.body.scrollHeight || document.documentElement.scrollHeight\n    const viewH = document.documentElement.clientHeight\n    const scrollH =\n      document.body.scrollTop || document.documentElement.scrollTop\n    if (viewH + scrollH + 50 >= sumH) {\n      this.getTopics()\n    }\n  }\n  /**\n   * 当前Tab变化时判断Store里是否已经存储数据。\n   * 是：拉出来，设置到state中\n   * 否：重新获取数据\n   * 这里使用箭头函数而不是上面的那种方式，是为了解决this问题\n   * 详情看：https://react.docschina.org/docs/react-without-es6.html#%E8%87%AA%E5%8A%A8%E7%BB%91%E5%AE%9A\n   * （或者自行Google）\n   */\n  tabChanged = tab => {\n    const store = this.state.store\n\n    // 如果未存储当前Tab的数据，重新获取\n    if (!store[tab]) {\n      this.setState(\n        {\n          tab,\n          limit: 20,\n          list: []\n        },\n        () => {\n          this.getTopics()\n        }\n      )\n      return\n    }\n\n    this.setState({\n      tab,\n      limit: store[tab].limit,\n      list: store[tab].data\n    })\n  }\n  render() {\n    return (\n      <div styleName=\"home\">\n        <Spin spinning={false}>\n          <div>\n            <Tabs defaultActiveKey=\"\" onChange={this.tabChanged}>\n              <TabPane tab=\"全部\" key=\"all\">\n                <Topics list={this.state.list} />\n              </TabPane>\n              <TabPane tab=\"精华\" key=\"good\">\n                <Topics list={this.state.list} />\n              </TabPane>\n              <TabPane tab=\"分享\" key=\"share\">\n                <Topics list={this.state.list} />\n              </TabPane>\n              <TabPane tab=\"问答\" key=\"ask\">\n                <Topics list={this.state.list} />\n              </TabPane>\n              <TabPane tab=\"工作\" key=\"job\">\n                <Topics list={this.state.list} />\n              </TabPane>\n            </Tabs>\n          </div>\n        </Spin>\n      </div>\n    )\n  }\n}\n\nexport default CSSModules(Home, style)\n","import request from '@src/utils/request'\r\n\r\n// 获取首页帖子列表数据\r\nexport const getTopics = data => {\r\n  return request({\r\n    url: '/topics',\r\n    method: 'get',\r\n    params: data\r\n  })\r\n}\r\n\r\n// 获取帖子详情数据\r\nexport const getTopicById = id => {\r\n  return request({\r\n    url: `/topic/${id}`,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\n// 获取用户详情数据\r\nexport const getUserByName = loginname => {\r\n  return request({\r\n    url: `/user/${loginname}`,\r\n    method: 'get'\r\n  })\r\n}\r\n//验证accessToken\r\nexport const accessMatch = accesstoken =>{\r\n  return request({\r\n    url:`/accesstoken`,\r\n    method: 'post',\r\n  })\r\n}\r\n\r\n//为评论点赞\r\nexport const upvoteComments = reply_id =>{\r\n  return request(\r\n      {\r\n        url:`/reply/${reply_id}/ups`,\r\n        method: 'post'\r\n      }\r\n  )\r\n}","/**\r\n * 一个发布-订阅模式的实现\r\n * 用来解决两个任意组件间的数据传递（一般是非父子组件，因为父子组件用props更好）\r\n **/\r\nconst eventProxy = {\r\n  onObj: {},\r\n  oneObj: {},\r\n  on: function(key, fn) {\r\n    if (this.onObj[key] === undefined) {\r\n      this.onObj[key] = []\r\n    }\r\n\r\n    this.onObj[key].push(fn)\r\n  },\r\n  one: function(key, fn) {\r\n    if (this.oneObj[key] === undefined) {\r\n      this.oneObj[key] = []\r\n    }\r\n\r\n    this.oneObj[key].push(fn)\r\n  },\r\n  off: function(key) {\r\n    this.onObj[key] = []\r\n    this.oneObj[key] = []\r\n  },\r\n  trigger: function() {\r\n    let key, args\r\n    if (arguments.length === 0) {\r\n      return false\r\n    }\r\n    key = arguments[0]\r\n    args = [].concat(Array.prototype.slice.call(arguments, 1))\r\n\r\n    if (this.onObj[key] !== undefined && this.onObj[key].length > 0) {\r\n      for (let i in this.onObj[key]) {\r\n        this.onObj[key][i].apply(null, args)\r\n      }\r\n    }\r\n    if (this.oneObj[key] !== undefined && this.oneObj[key].length > 0) {\r\n      for (let i in this.oneObj[key]) {\r\n        this.oneObj[key][i].apply(null, args)\r\n        this.oneObj[key][i] = undefined\r\n      }\r\n      this.oneObj[key] = []\r\n    }\r\n  }\r\n}\r\n\r\nexport default eventProxy\r\n","import React, { Component } from 'react'\nimport style from './Index.module.scss'\nimport CSSModules from 'react-css-modules'\nimport { getUserByName } from '@src/utils/api'\nimport { Link } from 'react-router-dom'\nimport eventProxy from '@src/utils/eventProxy'\nimport moment from 'moment'\nimport { Skeleton } from 'antd'\n\n/**\n * 帖子页面右侧最上方的个人信息展示组件\n */\nclass ProfilePanel extends Component {\n  /**\n   * state有两种初始化方法，这是其中一种\n   * 另外一种见：header/index.js文件\n   */\n  constructor() {\n    super()\n    this.state = {\n      user: {}\n    }\n  }\n  /**\n   * 调用接口获取数据\n   * P.S. 一般在此钩子下面调用接口或者类似操作\n   */\n  componentDidMount() {\n    this.fetchData(this.props.loginname)\n  }\n  /**\n   * 在当前路由状态变化后触发的钩子函数\n   * P.S. 这个函数一般用来解决，路由发生了变化，但组件因为没有被销毁所以不会再一次触发‘componentDidMount’钩子，\n   * 这时候就可以在当前钩子下重新获取数据\n   * @param {Object} nextProps props对象\n   */\n  componentWillReceiveProps(nextProps) {\n    this.fetchData(nextProps.loginname)\n  }\n  /**\n   * 封装好的获取数据的函数，这样就不需要每次使用都copy一遍代码了\n   */\n  fetchData(loginname) {\n    getUserByName(loginname).then(res => {\n      this.setState({\n        user: res.data\n      })\n      eventProxy.trigger('user', res.data)\n    })\n  }\n\n  render() {\n    // 在没有数据时，展示骨架图\n    if (!this.state.user.loginname) {\n      return <Skeleton active />\n    }\n    return (\n      <div styleName=\"panel\">\n        <Link styleName=\"user\" to={'/user/' + this.state.user.loginname}>\n          <img src={this.state.user.avatar_url} alt=\"用户头像\" />\n          <span>{this.state.user.loginname}</span>\n        </Link>\n        <div>积分：{this.state.user.score}</div>\n        <div>\n          Github：\n          <a\n            href={'https://github.com/' + this.state.user.githubUsername}\n            target=\"_blank\"\n            rel=\"nofollow noopener noreferrer\"\n          >\n            {this.state.user.githubUsername}\n          </a>\n        </div>\n        <div>\n          注册时间：\n          {moment(this.state.user.create_at, 'YYYY-MM-DD')\n            .startOf('day')\n            .fromNow()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default CSSModules(ProfilePanel, style)\n","import React, { Component } from 'react'\nimport style from './Index.module.scss'\nimport CSSModules from 'react-css-modules'\nimport { Link } from 'react-router-dom'\nimport eventProxy from '@src/utils/eventProxy'\nimport { Divider } from 'antd'\nimport moment from 'moment'\n\n/**\n * 帖子页面右侧最中间的的发贴者的其他帖子组件\n */\nclass OtherTopic extends Component {\n  /**\n   * 设置props的默认值\n   */\n  static defaultProps = {\n    simple: true // 是否展示简单模式？\n  }\n  constructor() {\n    super()\n    this.state = {\n      user: {}\n    }\n  }\n  /**\n   * 监听'user'，将被传入的数据设置到当前组件state中\n   * P.S. 一般在此钩子下面调用接口或者类似操作\n   */\n  componentDidMount() {\n    // 增加属性，表示当前实例未被卸载\n    this.isUnmounted = false\n    eventProxy.on('user', data => {\n      // 如果当前实例被卸载了，就没有必要更新其state了（会引起内存泄漏）\n      if (!this.isUnmounted) {\n        this.setState({\n          user: data\n        })\n      }\n    })\n  }\n  /**\n   * 给this增加属性，表示当前实例已被卸载\n   */\n  componentWillUnmount() {\n    this.isUnmounted = true\n  }\n\n  render() {\n    // 增加空值判断\n    if (!this.state.user.recent_topics) {\n      return <div />\n    }\n\n    const items = this.state.user.recent_topics.map(item => {\n      let temp = <Link to={'/topic/' + item.id}>{item.title}</Link>\n      // 如果不展示简单模式的话，就需要将用户头像等信息展示出来\n      if (!this.props.simple) {\n        temp = (\n          <div>\n            <Link styleName=\"avatar\" to={'/user/' + item.author.loginname}>\n              <img src={item.author && item.author.avatar_url} alt=\"头像\" />\n            </Link>\n            <Link key={item.id} to={'/topic/' + item.id}>\n              {item.title}\n            </Link>\n            <span styleName=\"time\">\n              {moment(item.last_reply_at, 'YYYY-MM-DD')\n                .startOf('day')\n                .fromNow()}\n            </span>\n            <Divider styleName=\"inside-divider\" />\n          </div>\n        )\n      }\n      return <div key={item.id}>{temp}</div>\n    })\n    return (\n      <div styleName=\"panel\">\n        <header>最近创建的话题</header>\n        <Divider styleName=\"divider\" />\n        {items}\n      </div>\n    )\n  }\n}\n\nexport default CSSModules(OtherTopic, style)\n","import React, { Component } from 'react'\nimport style from './Index.module.scss'\nimport CSSModules from 'react-css-modules'\nimport { Link } from 'react-router-dom'\nimport eventProxy from '@src/utils/eventProxy'\nimport { Divider } from 'antd'\nimport moment from 'moment'\n\nclass RecentReply extends Component {\n    /**\n     * 设置props的默认值\n     */\n    static defaultProps = {\n        simple: true // 是否展示简单模式？\n    }\n    constructor() {\n        super()\n        this.state = {\n            user: {}\n        }\n    }\n    /**\n     * 监听'user'，将被传入的数据设置到当前组件state中\n     * P.S. 一般在此钩子下面调用接口或者类似操作\n     */\n    componentDidMount() {\n        // 增加属性，表示当前实例未被卸载\n        this.isUnmounted = false\n        eventProxy.on('user', data => {\n            // 如果当前实例被卸载了，就没有必要更新其state了（会引起内存泄漏）\n            if (!this.isUnmounted) {\n                this.setState({\n                    user: data\n                })\n            }\n        })\n    }\n    /**\n     * 给this增加属性，表示当前实例已被卸载\n     */\n    componentWillUnmount() {\n        this.isUnmounted = true\n    }\n\n    render() {\n        // 增加空值判断\n        if (!this.state.user.recent_replies) {\n            return <div />\n        }\n\n        const items = this.state.user.recent_replies.map(item => {\n            let temp = (\n                <Link key={item.id} to={'/topic/' + item.id}>\n                    {item.title}\n                </Link>\n            )\n            // 如果不展示简单模式的话，就需要将用户头像等信息展示出来\n            if (!this.props.simple) {\n                temp = (\n                    <div>\n                        <Link styleName=\"avatar\" to={'/user/' + item.author.loginname}>\n                            <img src={item.author && item.author.avatar_url} alt=\"头像\" />\n                        </Link>\n                        <Link key={item.id} to={'/topic/' + item.id}>\n                            {item.title}\n                        </Link>\n                        <span styleName=\"time\">\n              {moment(item.last_reply_at, 'YYYY-MM-DD')\n                  .startOf('day')\n                  .fromNow()}\n            </span>\n                        <Divider styleName=\"inside-divider\" />\n                    </div>\n                )\n            }\n            return <div key={item.id}>{temp}</div>\n        })\n        return (\n            <div styleName=\"panel\">\n                <header>最近参与的话题</header>\n                <Divider styleName=\"divider\" />\n                {items}\n            </div>\n        )\n    }\n}\n\nexport default CSSModules(RecentReply, style)\n","import React, { Component } from 'react'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport ProfilePanel from '@src/components/ProfilePanel/Index'\r\nimport OtherTopic from '@src/components/OtherTopic/Index'\r\nimport RecentReply from '@src/components/RecentReply/Index'\r\n\r\nclass Profile extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      loginname: ''\r\n    }\r\n  }\r\n  /**\r\n   * 1. 调用接口获取数据\r\n   * 2. 绑定窗口滚动监听函数\r\n   */\r\n  componentWillMount() {\r\n    this.setState({\r\n      loginname: this.props.match.params.id\r\n    })\r\n  }\r\n  /**\r\n   * 在当前路由状态变化后触发的钩子函数\r\n   * 这时候就可以在当前钩子下重新获取数据\r\n   * @param {Object} nextProps props对象\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      loginname: nextProps.match.params.id\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div styleName=\"user\">\r\n        <ProfilePanel loginname={this.state.loginname} />\r\n        <OtherTopic simple={false} />\r\n        <RecentReply simple={false} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(Profile, style)\r\n","import React, { Component } from 'react'\nimport style from './Index.module.scss'\nimport CSSModules from 'react-css-modules'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\n\n/**\n * 帖子回复组件\n */\nclass ProfilePanel extends Component {\n    /**\n     * 将html内容包裹在对象中，key必须是'__html'\n     * 详情见：https://react.docschina.org/docs/dom-elements.html#dangerouslysetinnerhtml%E5%87%BD%E6%95%B0\n     * @param {String} html html字符串\n     */\n    getHTML(html) {\n        return {\n            __html: html\n        }\n    }\n    /**\n     * 根据点赞人数是否为零来返回不同的html文件。毕竟不需要把 0赞 展示出来\n     * @param {Number} length 点赞人数\n     */\n    getThumbs(length) {\n        if (!length) {\n            return <span />\n        }\n        return (\n            <span styleName=\"thumbs\">\n        <img src={require('@src/assets/image/thumbs-up.svg')} alt=\"点赞\" />\n                {length}\n      </span>\n        )\n    }\n    render() {\n        const data = this.props.data.map((reply, index) => {\n            return (\n                <div key={reply.id}>\n                    <Link to={'/user/' + reply.author.loginname}>\n                        <img src={reply.author && reply.author.avatar_url} alt=\"头像\" />\n                    </Link>\n                    <div>\n                        <div styleName=\"info\">\n                            <p>\n                                <span>{index + 1}楼&nbsp;</span>\n                                <Link to={'/user/' + reply.author.loginname}>\n                                    {reply.author.loginname}\n                                </Link>\n                                <span>\n                  &nbsp;\n                                    {moment(reply.create_at, 'YYYY-MM-DD')\n                                        .startOf('day')\n                                        .fromNow()}\n                </span>\n                            </p>\n                            {this.getThumbs(reply.ups.length)}\n                        </div>\n                        <p dangerouslySetInnerHTML={this.getHTML(reply.content)} />\n                    </div>\n                </div>\n            )\n        })\n        // 在最前面插入一行React元素，来展示一共有多少条回复信息\n        data.unshift(\n            <div key={1}>\n                <span>{this.props.data.length}</span>&nbsp;回复\n            </div>\n        )\n\n        return <div styleName=\"reply\">{data}</div>\n    }\n}\n\nexport default CSSModules(ProfilePanel, style)\n","import React, { Component } from 'react'\r\nimport { getTopicById } from '@src/utils/api'\r\nimport style from './Index.module.scss'\r\nimport CSSModules from 'react-css-modules'\r\nimport ProfilePanel from '@src/components/ProfilePanel/Index'\r\nimport OtherTopic from '@src/components/OtherTopic/Index'\r\nimport RecentReply from '@src/components/RecentReply/Index'\r\nimport Reply from '@src/components/Reply/Index'\r\nimport '@src/assets/vue.css'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport tab from '@src/utils/tab'\r\nimport { Divider, Skeleton } from 'antd'\r\n\r\nclass Topic extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      topic: {}\r\n    }\r\n  }\r\n  /**\r\n   * 调用接口获取数据\r\n   * P.S. 一般在此钩子下面调用接口或者类似操作\r\n   */\r\n  componentDidMount() {\r\n    this.fetchData(this.props.match.params.id)\r\n  }\r\n  /**\r\n   * 在当前路由状态变化后触发的钩子函数\r\n   * 这时候就可以在当前钩子下重新获取数据\r\n   * @param {Object} nextProps props对象\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    this.fetchData(nextProps.match.params.id)\r\n  }\r\n  /**\r\n   * 封装好的获取数据的函数，这样就不需要每次使用都copy一遍代码了\r\n   */\r\n  fetchData(id) {\r\n    getTopicById(id).then(res => {\r\n      this.setState({\r\n        topic: {\r\n          ...res.data,\r\n          ...res.data.author\r\n        }\r\n      })\r\n    })\r\n  }\r\n  /**\r\n   * 将html内容包裹在对象中，key必须是'__html'\r\n   * 详情见：https://react.docschina.org/docs/dom-elements.html#dangerouslysetinnerhtml%E5%87%BD%E6%95%B0\r\n   * @param {String} html html字符串\r\n   */\r\n  getHTML(html) {\r\n    return {\r\n      __html: html\r\n    }\r\n  }\r\n  render() {\r\n    // 在没有数据时，展示骨架图\r\n    if (!this.state.topic.id) {\r\n      return <Skeleton active />\r\n    }\r\n    return (\r\n      <div styleName=\"topic\">\r\n        <div styleName=\"left\">\r\n          <div\r\n            styleName=\"title\"\r\n            dangerouslySetInnerHTML={this.getHTML(this.state.topic.title)}\r\n          />\r\n          <div styleName=\"info\">\r\n            <span>\r\n              发布于&nbsp;\r\n              {moment(this.state.topic.create_at, 'YYYY-MM-DD')\r\n                .startOf('day')\r\n                .fromNow()}\r\n              &nbsp;•&nbsp;\r\n            </span>\r\n            作者：\r\n            <Link to={'/user/' + this.state.topic.loginname}>\r\n              {this.state.topic.loginname}\r\n            </Link>\r\n            &nbsp;•&nbsp;\r\n            <span>{this.state.topic.visit_count}次浏览&nbsp;•&nbsp;</span>\r\n            <span>\r\n              来自：\r\n              {tab[this.state.topic.tab] && tab[this.state.topic.tab].name}\r\n            </span>\r\n          </div>\r\n          <Divider />\r\n          <div\r\n            styleName=\"content\"\r\n            dangerouslySetInnerHTML={this.getHTML(this.state.topic.content)}\r\n          />\r\n          <Reply data={this.state.topic.replies} />\r\n        </div>\r\n        <div styleName=\"right\">\r\n          <ProfilePanel loginname={this.state.topic.loginname} />\r\n          <OtherTopic />\r\n          <RecentReply />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CSSModules(Topic, style)\r\n","import React, { Component } from 'react'\r\nimport { HashRouter, Route, Redirect } from 'react-router-dom'\r\nimport Header from './components/Header/Index'\r\nimport Home from './views/Home/Index'\r\nimport Profile from './views/Profile/Index'\r\nimport Topic from './views/Topic/Index'\r\nimport './App.scss'\r\n\r\n/**\r\n * 路由设置\r\n */\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <HashRouter>\r\n                    <div className=\"box\">\r\n                        <Route exact path=\"/\" component={Home} />\r\n                        <Route path=\"/topic/:id\" component={Topic} />\r\n                        <Route path=\"/user/:id\" component={Profile} />\r\n                        <Route exact path=\"/topic\" render={() => <Redirect to=\"/\" />} />\r\n                        <Route exact path=\"/user\" render={() => <Redirect to=\"/\" />} />\r\n                    </div>\r\n                </HashRouter>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport 'antd/dist/antd.css'\r\nimport App from './App'\r\nimport { ConfigProvider } from 'antd'\r\n// 由于 antd 组件的默认文案是英文，所以需要修改为中文\r\nimport zhCN from 'antd/lib/locale-provider/zh_CN'\r\nimport moment from 'moment'\r\nimport 'moment/locale/zh-cn'\r\n\r\nmoment.locale('zh-cn')\r\n\r\nReactDOM.render(\r\n    <ConfigProvider locale={zhCN}>\r\n        <App />\r\n    </ConfigProvider>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}